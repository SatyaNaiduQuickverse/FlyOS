generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Authentication Models
model User {
  id            String      @id @default(uuid())
  username      String      @unique
  password      String
  fullName      String
  email         String      @unique
  role          UserRole
  regionId      String?
  status        UserStatus  @default(ACTIVE)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relationships
  region        Region?     @relation(fields: [regionId], references: [id])
  loginHistory  LoginHistory[]
  drones        Drone[]     @relation("OperatorDrones")
  
  // Self-relation fixed - CommanderOperators relation
  operators     User[]      @relation("CommanderOperators")
  commander     User?       @relation("CommanderOperators", fields: [commanderId], references: [id])
  commanderId   String?
  
  @@index([role])
  @@index([regionId])
}

// Region model
model Region {
  id            String      @id
  name          String
  commanderName String?
  status        String      @default("ACTIVE")
  area          String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  // Relationships
  users         User[]
  drones        Drone[]
}

// LoginHistory model
model LoginHistory {
  id            String      @id @default(uuid())
  userId        String
  username      String
  ipAddress     String?
  userAgent     String?
  loginTime     DateTime    @default(now())
  logoutTime    DateTime?
  status        String      @default("SUCCESS")
  failureReason String?
  sessionDuration Int?
  
  // Relationships
  user          User        @relation(fields: [userId], references: [id])
  
  @@index([userId])
}

// Drone model
model Drone {
  id            String      @id
  model         String
  status        DroneStatus @default(STANDBY)
  regionId      String?
  operatorId    String?
  lastMaintenance DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  // Relationships
  region        Region?     @relation(fields: [regionId], references: [id])
  operator      User?       @relation("OperatorDrones", fields: [operatorId], references: [id])
  
  @@index([regionId])
  @@index([operatorId])
  @@index([status])
}

// Enums
enum UserRole {
  MAIN_HQ
  REGIONAL_HQ
  OPERATOR
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum DroneStatus {
  ACTIVE
  STANDBY
  MAINTENANCE
  OFFLINE
}
