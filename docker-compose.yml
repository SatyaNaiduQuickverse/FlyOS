# docker-compose.yml - COMPLETE FLYOS SYSTEM
version: '3.8'

services:
  # Frontend Next.js Application - MAIN APPLICATION
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: "https://ftktazhukuquenyshvka.supabase.co"
        NEXT_PUBLIC_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwMzEwNDgsImV4cCI6MjA2MzYwNzA0OH0.l8rKPsUCH0KZTcqr4GrNz4t-_EiSqzUvUTBqxKhVa6w"
        SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk"
        NEXT_PUBLIC_API_URL: "http://localhost:3001"
        NEXT_PUBLIC_WS_URL: "http://localhost:4002"
        NEXT_PUBLIC_DOMAIN: "localhost:3001"
        USER_MANAGEMENT_SERVICE_URL: "http://user-management-service:4003"
        DRONE_DB_SERVICE_URL: "http://drone-db-service:4001"
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_SUPABASE_URL: "https://ftktazhukuquenyshvka.supabase.co"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwMzEwNDgsImV4cCI6MjA2MzYwNzA0OH0.l8rKPsUCH0KZTcqr4GrNz4t-_EiSqzUvUTBqxKhVa6w"
      SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk"
      USER_MANAGEMENT_SERVICE_URL: "http://user-management-service:4003"
      DRONE_DB_SERVICE_URL: "http://drone-db-service:4001"
      REALTIME_SERVICE_URL: "http://realtime-service:4002"
      DRONE_CONNECTION_SERVICE_URL: "http://drone-connection-service:4005"
      NEXT_PUBLIC_API_URL: "http://localhost:3001"
      NEXT_PUBLIC_WS_URL: "http://localhost:4002"
      NEXT_PUBLIC_DOMAIN: "localhost:3001"
      NODE_ENV: production
    depends_on:
      user-management-service:
        condition: service_healthy
      realtime-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # PostgreSQL for user management
  postgres-users:
    image: postgres:14
    environment:
      POSTGRES_DB: flyos_users
      POSTGRES_USER: flyos_user
      POSTGRES_PASSWORD: flyos_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flyos_user -d flyos_users"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_users_data:/var/lib/postgresql/data

  # TimescaleDB for drone telemetry
  postgres-drones:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_DB: flyos_drones
      POSTGRES_USER: flyos_drone_user
      POSTGRES_PASSWORD: flyos_drone_password
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flyos_drone_user -d flyos_drones"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_drones_data:/var/lib/postgresql/data

  # Redis for real-time features
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # User Management Service
  user-management-service:
    build: ./services/user-management-service
    ports:
      - "4003:4003"
    environment:
      DATABASE_URL: "postgresql://flyos_user:flyos_password@postgres-users:5432/flyos_users"
      NEXT_PUBLIC_SUPABASE_URL: "https://ftktazhukuquenyshvka.supabase.co"
      SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk"
      PORT: 4003
      NODE_ENV: production
      LOG_LEVEL: info
      CORS_ORIGIN: "http://localhost:3001"
    depends_on:
      postgres-users:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Drone Database Service
  drone-db-service:
    build: ./services/drone-db-service
    ports:
      - "4001:4001"
    environment:
      DATABASE_URL: "postgresql://flyos_drone_user:flyos_drone_password@postgres-drones:5432/flyos_drones"
      REDIS_URL: "redis://redis:6379"
      NEXT_PUBLIC_SUPABASE_URL: "https://ftktazhukuquenyshvka.supabase.co"
      SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk"
      USER_MANAGEMENT_SERVICE_URL: "http://user-management-service:4003"
      PORT: 4001
      NODE_ENV: production
      LOG_LEVEL: info
      CORS_ORIGIN: "http://localhost:3001"
    depends_on:
      postgres-drones:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Realtime Service
  realtime-service:
    build: ./services/realtime-service
    ports:
      - "4002:4002"
    environment:
      REDIS_URL: "redis://redis:6379"
      NEXT_PUBLIC_SUPABASE_URL: "https://ftktazhukuquenyshvka.supabase.co"
      SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk"
      USER_MANAGEMENT_SERVICE_URL: "http://user-management-service:4003"
      DRONE_DB_SERVICE_URL: "http://drone-db-service:4001"
      PORT: 4002
      NODE_ENV: production
      LOG_LEVEL: info
      CORS_ORIGIN: "http://localhost:3001"
    depends_on:
      redis:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Drone Connection Service
  drone-connection-service:
    build: ./services/drone-connection-service
    ports:
      - "4005:4005"
    environment:
      REDIS_URL: "redis://redis:6379"
      DRONE_DB_SERVICE_URL: "http://drone-db-service:4001"
      USER_MANAGEMENT_SERVICE_URL: "http://user-management-service:4003"
      PORT: 4005
      NODE_ENV: production
      LOG_LEVEL: info
      CORS_ORIGIN: "http://localhost:3001"
    depends_on:
      redis:
        condition: service_healthy
      drone-db-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_users_data:
  postgres_drones_data:
  redis_data:

networks:
  default:
    name: flyos-network
