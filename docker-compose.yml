version: '3.8'

services:
  # Frontend (your existing Next.js app)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      # Supabase Configuration (ONLY source of auth)
      - NEXT_PUBLIC_SUPABASE_URL=https://ftktazhukuquenyshvka.supabase.co
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwMzEwNDgsImV4cCI6MjA2MzYwNzA0OH0.FC8QC-opj48oyfJwInq--ZKW41TuCMSzKwTXZ2AnPKA
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk
      # App Configuration
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_WS_URL=ws://3.111.215.70:4002
      - NEXT_PUBLIC_DOMAIN=http://3.111.215.70:3001
      - DRONE_DB_SERVICE_URL=http://drone-db-service:4001
    depends_on:
      - drone-db-service
      - realtime-service
    networks:
      - flyos-network
    restart: unless-stopped

  # TimescaleDB database
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_USER: flyos_admin
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: flyos_db
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./services/drone-db-service/migrations/sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - flyos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flyos_admin -d flyos_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for real-time data
  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - flyos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database Service (PURE SUPABASE AUTH)
  drone-db-service:
    build:
      context: ./services/drone-db-service
      dockerfile: Dockerfile
    depends_on:
      - timescaledb
      - redis
    environment:
      - NODE_ENV=production
      - PORT=4001
      - DATABASE_URL=postgresql://flyos_admin:secure_password@timescaledb:5432/flyos_db
      - REDIS_URL=redis://redis:6379
      # SUPABASE ONLY - No JWT secrets needed
      - NEXT_PUBLIC_SUPABASE_URL=https://ftktazhukuquenyshvka.supabase.co
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk
      - CORS_ORIGIN=http://localhost:3001,http://frontend:3000,http://3.111.215.70:3001
      - LOG_LEVEL=debug
    ports:
      - "4001:4001"
    networks:
      - flyos-network
    restart: unless-stopped

  # Real-time Service (PURE SUPABASE AUTH)
  realtime-service:
    build:
      context: ./services/realtime-service
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      - NODE_ENV=production
      - PORT=4002
      - REDIS_URL=redis://redis:6379
      # SUPABASE ONLY - No JWT secrets needed
      - NEXT_PUBLIC_SUPABASE_URL=https://ftktazhukuquenyshvka.supabase.co
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ0a3Rhemh1a3VxdWVueXNodmthIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODAzMTA0OCwiZXhwIjoyMDYzNjA3MDQ4fQ.lF9pnk_8R52ARVSWOWCV8DhDZ9RXIdfkRA6FxZ4WCWk
      - CORS_ORIGIN=http://localhost:3001,http://frontend:3000,http://3.111.215.70:3001
      - LOG_LEVEL=debug
    ports:
      - "4002:4002"
    networks:
      - flyos-network
    restart: unless-stopped

networks:
  flyos-network:
    driver: bridge

volumes:
  timescaledb_data:
  redis_data: