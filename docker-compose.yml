version: '3.8'
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
      - AUTH_SERVICE_URL=http://auth-service:4000
    depends_on:
      - auth-service
    networks:
      - flyos-network
    restart: unless-stopped
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    expose:
      - "4000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=your_secure_jwt_secret_key
      - ACCESS_TOKEN_EXPIRY=1h
      - REFRESH_TOKEN_EXPIRY=7d
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=flyos_admin
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_DB=flyos_db
      - CORS_ORIGIN=http://frontend:3000
      - FORCE_DB_SYNC=true
    depends_on:
      - postgres
    networks:
      - flyos-network
    restart: unless-stopped
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: flyos_admin
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: flyos_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - flyos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flyos_admin -d flyos_db"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  flyos-network:
    driver: bridge
volumes:
  postgres_data:
